name: CI
on:
  workflow_dispatch:
  workflow_call:
  push:
    paths:
      - 'src/**'
      - '__tests__/**'
      - 'package.json'
      - 'yarn.lock'
      - 'release.config.js'
      - '.github/workflows/ci.yml'
    branches:
      - '*'
      - '**'
      - '!master'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


env:
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  CI: true

jobs:
  CI:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    permissions:
      packages: write
      contents: write

    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."

      - uses: actions/checkout@v5
        with:
          fetch-depth: 30

      - uses: FranzDiebold/github-env-vars-action@v2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24

      - name: Yarn
        run: yarn install --frozen-lockfile

      - name: Test
        run: |
          yarn preparemetadata
          yarn test

      - name: Build
        run: yarn build

      - name: Get Package Version
        id: package_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Get Git Tags
        id: git_tags
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT
          COMMIT_COUNT=$(git rev-list --count HEAD)
          echo "commit_count=$COMMIT_COUNT" >> $GITHUB_OUTPUT

      - name: Update Job Summary
        run: |
          echo "# 📦 Phone Number Validator JS - CI Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 📊 Build Information" >> $GITHUB_STEP_SUMMARY
          echo "- **Current Version:** \`${{ steps.package_version.outputs.version }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Latest Git Tag:** \`${{ steps.git_tags.outputs.latest_tag }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Total Commits:** \`${{ steps.git_tags.outputs.commit_count }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch:** \`${{ github.ref_name }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit SHA:** \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 🧪 Test Results" >> $GITHUB_STEP_SUMMARY
          echo "✅ All tests passed successfully" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 📁 Generated Files" >> $GITHUB_STEP_SUMMARY
          echo "- Main library: \`lib/index.js\`, \`lib/index.es.js\`" >> $GITHUB_STEP_SUMMARY
          echo "- Serverless builds: \`lib/serverless.*.js\`" >> $GITHUB_STEP_SUMMARY
          echo "- TypeScript declarations: \`lib/*.d.ts\`" >> $GITHUB_STEP_SUMMARY

      - name: Release
        if: github.ref == 'refs/heads/develop'
        run: |
          git config --global user.email "support@dev.me"
          git config --global user.name "DEV.ME Team"
          npm i -g semantic-release @semantic-release/git @semantic-release/github conventional-changelog-conventionalcommits
          npx semantic-release --no-ci --debug

      - name: Update Release Summary
        if: github.ref == 'refs/heads/develop'
        run: |
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 🚀 Release Information" >> $GITHUB_STEP_SUMMARY
          if [ "$NEW_VERSION" != "${{ steps.package_version.outputs.version }}" ]; then
            echo "✅ **New release created:** \`v$NEW_VERSION\`" >> $GITHUB_STEP_SUMMARY
            echo "- **Previous version:** \`${{ steps.package_version.outputs.version }}\`" >> $GITHUB_STEP_SUMMARY
            echo "- **Release type:** Beta (develop branch)" >> $GITHUB_STEP_SUMMARY
          else
            echo "ℹ️ No new release created (no relevant changes)" >> $GITHUB_STEP_SUMMARY
          fi
